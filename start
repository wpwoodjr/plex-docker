#!/bin/bash
# First configure Plex by editing ./conf
# then run ./start to start Plex (this file)
# run ./stop to stop Plex

set -e
plex_db="$(pwd)/database"
source ./conf

media_vols=()
for m in "${media_folders[@]}"
do
  dir="${!m}"
  [ -d "$dir" ] && media_vols+=(-v "$dir:/$m")
done
# [ -d "$media" ] || mkdir -pv "$media"
[ "$media_vols" = "" ] && echo "No media directories, please edit conf file" && exit 1

config=${config:-"$plex_db/config"}
[ -d "$config" ] || mkdir -pv "$config"
transcode=${transcode:-"$plex_db/transcode"}
[ -d "$transcode" ] || mkdir -pv "$transcode"

if [ "$hostip" = "" ]
then
  hostip=$(ip route get 8.8.8.8 || echo "0.0.0.0")
  if [ "$hostip" = "0.0.0.0" ]
  then
    echo -e "\nfailed to get host ip, exiting..."
    exit 1
  else
    hostip=$(awk <<<$hostip '{gsub(".*src",""); print $1; exit}')
  fi
fi

allowed_networks=" "
advertise_ip=" "
if [ "$mode" = "host" ]
then
  port=32400
  network_args=(--network "host")
  [ $plexlogin != true ] && allowed_networks="$hostip/24"
else
  network_args=(-p "$port:32400/tcp")
  if [ "$mode" = "bridged" ]
  then
    network_args+=( \
      -p 3005:3005/tcp \
      -p 8324:8324/tcp \
      -p 32469:32469/tcp \
      -p 1900:1900/udp \
      -p 32410:32410/udp \
      -p 32412:32412/udp \
      -p 32413:32413/udp \
      -p 32414:32414/udp)
  fi
  [ $plexlogin != true ] && allowed_networks="$hostip/24,$docker_network"
  [ $plexlogin = true ] && advertise_ip="http://$hostip:$port/"
fi
network_args+=(--env ALLOWED_NETWORKS="$allowed_networks" --env ADVERTISE_IP="$advertise_ip")

rm=""
[ "$restart_policy" = "no" ] && rm="--rm"
set -x
docker run -d \
  --name "$containername" \
  --hostname "$servername" \
  --restart "$restart_policy" $rm \
  "${media_vols[@]}" \
  -v "$config:/config" \
  -v "$transcode:/transcode" \
  "${network_args[@]}" \
  --env TZ="$tz" \
  --env PLEX_UID="$uid" \
  --env PLEX_GID="$gid" \
  --device "/dev/dri:/dev/dri" \
  "$image"
  # --env PLEX_CLAIM="<claimToken>" \
set +x

# https://unix.stackexchange.com/a/470629/338467
wait() {
  local LOGLINE
  while IFS= read -r LOGLINE || [[ -n "$LOGLINE" ]]; do
    printf '%s\n' "$LOGLINE"
    [[ "${LOGLINE}" == "$2" ]] && return 0
  done < <(timeout "$1" $3)
  return 0
}

wait 30 "Starting Plex Media Server." "docker logs -f $containername"
echo -e "\n$servername started in container $containername at http://$hostip:$port/web"
echo "If this is the first time running this Plex server, using an incognito browser on"
echo "the Docker host machine do initial setup at http://localhost:$port/web"

if [ "$slideshow_speed_ms" != "default" ]
then
  docker exec "$containername" \
    /bin/bash -c \
    "sed -i -e 's/this.onSlideShowAdvance,5e3/this.onSlideShowAdvance,$slideshow_speed_ms/g' \
    /usr/lib/plexmediaserver/Resources/Plug-ins*/WebClient.bundle/Contents/Resources/js/chunk*.js"

  docker exec "$containername" \
    /bin/bash -c \
    "grep -q 'this.onSlideShowAdvance,$slideshow_speed_ms' \
    /usr/lib/plexmediaserver/Resources/Plug-ins*/WebClient.bundle/Contents/Resources/js/chunk*.js" \
  || { echo "Slideshow speed not set!"; exit 1; }
  echo "Slideshow speed set to $slideshow_speed_ms milliseconds."
fi
